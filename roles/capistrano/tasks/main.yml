---
- name: Check for local ssh key
  stat:
    path: "/home/{{ deploy_user }}/.ssh/id_rsa.pub"
  register: local_ssh_key  

- name: Generate local public ssh key
  command: ssh-keygen -t rsa -N "" -f ~/.ssh/id_rsa
  when: local_ssh_key.stat.exists == False

- name: Get local ssh key
  slurp:
    src: "/home/travis/.ssh/id_rsa.pub"
  register: local_ssh_key

- debug: msg="{{ local_ssh_key['content'] | b64decode }}"

- name: Install local ssh key
  authorized_key:
    user: "{{ deploy_user }}"
    key: "{{ local_ssh_key['content'] | b64decode }}"

- name: Restart ssh
  become: true
  service: name=sshd state=restarted

- name: Copy deploy-secrets.yml to deploy directory
  template:
    src: "{{ playbook_dir }}/roles/capistrano/templates/deploy-secrets.yml"
    dest: "/home/{{ deploy_user }}/{{ app_name }}/config/deploy-secrets.yml"
    owner: "{{ deploy_user }}"
    group: wheel
    
- name: Creates shared folder
  file:
    path: /home/{{ deploy_user }}/consul/shared
    state: directory
    owner: "{{ deploy_user }}"
    group: wheel
    mode: 0755

- name: Creates shared config folder
  file:
    path: /home/{{ deploy_user }}/consul/shared/config
    state: directory
    owner: "{{ deploy_user }}"
    group: wheel
    mode: 0755

- name: Creates shared environment folder
  file:
    path: /home/{{ deploy_user }}/consul/shared/config/environments
    state: directory
    owner: "{{ deploy_user }}"
    group: wheel
    mode: 0755

- name: Creates shared initializers folder
  file:
    path: /home/{{ deploy_user }}/consul/shared/config/initializers
    state: directory
    owner: "{{ deploy_user }}"
    group: wheel
    mode: 0755

- name: Copy secrets configuration to shared folder
  command: cp /home/{{ deploy_user }}/consul/config/secrets.yml /home/{{ deploy_user }}/consul/shared/config/secrets.yml

- name: Copy database configuration to shared folder
  command: cp /home/{{ deploy_user }}/consul/config/database.yml /home/{{ deploy_user }}/consul/shared/config/database.yml

- name: Copy environment configuration to shared folder
  command: cp /home/{{ deploy_user }}/consul/config/environments/{{ env }}.rb /home/{{ deploy_user }}/consul/shared/config/environments/{{ env }}.rb

- name: Copy delayed jobs configuration to shared folder
  command: cp /home/{{ deploy_user }}/consul/config/initializers/delayed_job_config.rb /home/{{ deploy_user }}/consul/shared/config/initializers/delayed_job_config.rb

- name: Copy unicorn.rb template to shared folder
  template:
    src: "{{ playbook_dir }}/roles/capistrano/templates/unicorn.rb"
    dest: "/home/{{ deploy_user }}/consul/shared/config/unicorn.rb"
    owner: "{{ deploy_user }}"
    group: wheel

- name: Create Unicorn folders
  file:
    path: "/home/{{ deploy_user }}/consul/shared/{{ item }}"
    state: directory
    owner: "{{ deploy_user }}"
    group: wheel
    mode: 0775
  with_items:
    - "pids"
    - "sockets"
    - "log"

#ToDo use environment variable
- name: Deploy CONSUL to localhost (this may take a few minutes)
  shell: "source /home/{{ deploy_user }}/.rvm/scripts/rvm && /home/{{ deploy_user }}/.rvm/gems/ruby-{{ ruby_version }}/bin/cap production deploy"
  args:
    chdir: /home/{{ deploy_user }}/{{ app_name }}
    executable: /bin/bash

#ToDo
# Remove duplicate files in home/deploy/consul/
# Better yet... clone consul to /tmp and them delete /tmp
